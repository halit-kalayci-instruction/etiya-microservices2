version: "3.8"

services:
  product-service:
    build: ./productservice
    ports:
      - "8080:8080"
    networks:
      - common_network
    depends_on:
      - discovery-server
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8181/eureka/
      - SPRING_APPLICATION_NAME=product-service
  order-service:
    build: ./orderservice
    ports:
      - "8081:8081"
    networks:
      - common_network
    depends_on:
      - discovery-server
      - config-server
    environment:
      - SPRING_CLOUD_CONFIG_IMPORT=configserver:http://config-server:8888
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888
      - SPRING_CLOUD_CONFIG_PROFILE=prod
  discovery-server:
    build: ./discoveryserver
    ports:
      - "8181:8181"
    networks:
      - common_network
  gateway:
    build: ./gateway
    ports:
      - "8010:8010"
    depends_on:
      - discovery-server
    networks:
      - common_network
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8181/eureka/
  config-server:
    build: ./configserver
    ports:
      - "8888:8888"
    networks:
      - common_network
    environment:
      - SPRING_CLOUD_CONFIG_SERVER_GIT_URI=https://github.com/halitkalayci/etiya-microservices-configurations.git
      - SPRING_CLOUD_CONFIG_SERVER_GIT_DEFAULT-LABEL=master
  postgres:
    image: postgres
    ports:
      - "5435:5432"
    networks:
      - common_network
    environment:
      - POSTGRES_PASSWORD=test
    volumes:
      - postgresql-vol:/var/lib/postgresql/data
networks:
  common_network:
    driver: bridge

volumes:
  postgresql-vol:
    name: postgresql-vol
